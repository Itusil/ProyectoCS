<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project name="TVRenamer build script">
  <property file="build.properties" />

  <property name="src.main" value="src/main" />
  <property name="build" value="build" />
  <property name="lib" value="lib" />
  <property name="res" value="res" />
  <property name="rel" value="release" />
  <property name="rel.name" value="TVRenamer-${version}" />
  <property name="dist" value="dist" />
  <property name="etc" value="etc" />
  <property name="jar.builtBy" value="http://code.google.com/p/tv-renamer" />
  <property name="jar.mainClass" value="com.google.code.tvrenamer.view.UIStarter" />

  <!-- To build, get launch4j, update the path and uncomment. Ensure they are commented before committing -->
  <!--property name="launch4j" value="C:\launch4j" />
  <taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask" classpath="${launch4j}/launch4j.jar:${launch4j}/lib/xstream.jar" /-->

  <taskdef name="gcupload" classname="net.bluecow.googlecode.ant.GoogleCodeUploadTask" classpath="{lib}/ant-googlecode-0.0.2.jar" />

  <macrodef name="upload">
    <attribute name="platform" />
    <attribute name="summary.platform" />
    <attribute name="label.type" />
    <attribute name="label.os" />
    <sequential>
      <gcupload username="USERNAME" password="PASSWORD" 
          projectname="tv-renamer" filename="${rel}/${rel.name}-@{platform}.zip" targetfilename="${rel.name}-@{platform}.zip"
          summary="TVRenamer version ${version} for @{summary.platform}"
          labels="${label.type}, ${label.os}" />
    </sequential>
  </macrodef>

  <target name="init">
    <mkdir dir="${dist}" />
    <mkdir dir="${rel}" />
  </target>

  <path id="swt.classpath">
    <fileset dir="${lib}">
      <!-- We can compile against any swt version-->
      <include name="**/swt-win32*.jar" />
    </fileset>
  </path>

  <macrodef name="compile">
    <sequential>
      <mkdir dir="${build}" />
      <javac srcdir="${src.main}" destdir="${build}" classpathref="swt.classpath" source="1.5" />
    </sequential>
  </macrodef>

  <macrodef name="build.jar" description="Compiles the source then creates an executable jar for the given platform">
    <attribute name="platform" />
    <sequential>
      <compile />

      <jar destfile="${dist}/tvrenamer.jar" filesetmanifest="mergewithoutmain">
        <manifest>
          <attribute name="Built-By" value="${jar.builtBy}" />
          <attribute name="Main-Class" value="${jar.mainClass}" />
        </manifest>
        <fileset dir="${build}" />
        <fileset dir="${res}" />
        <zipgroupfileset dir="${lib}" includes="swt-@{platform}*.jar" />
      </jar>
    </sequential>
  </macrodef>

  <macrodef name="dist.linux">
    <attribute name="platform" />
    <sequential>
      <clean />

      <build.jar platform="@{platform}" />

      <mkdir dir="${dist}/${rel.name}" />
      <move file="${dist}/tvrenamer.jar" todir="${dist}/${rel.name}"/>
      <copy file="${etc}/run-scripts/run-linux.sh" todir="${dist}/${rel.name}" />
      <copy file="${etc}/LICENSE" todir="${dist}/${rel.name}" />

      <zip destfile="${dist}/${rel.name}/${rel.name}-@{platform}.zip">
        <zipfileset dir="${dist}" filemode="755" />
      </zip>
      <copy file="${dist}/${rel.name}/${rel.name}-@{platform}.zip" todir="${rel}" />
    </sequential>
  </macrodef>

  <macrodef name="dist.osx">
    <attribute name="platform" />
    <sequential>
      <clean />

      <build.jar platform="@{platform}" />

      <mkdir dir="${dist}/${rel.name}.app/Contents/MacOS" />
      <mkdir dir="${dist}/${rel.name}.app/Contents/Resources" />

      <copy file="${etc}/Info.plist" todir="${dist}/${rel.name}.app/Contents/" />
      <copy file="${etc}/run-scripts/run-mac.sh" todir="${dist}/${rel.name}.app/Contents/MacOS" />
      <move file="${dist}/tvrenamer.jar" todir="${dist}/${rel.name}.app/Contents/MacOS"/>
      <chmod file="${dist}/${rel.name}.app/Contents/MacOS/run-mac.sh" perm="+x" />
      <copy file="${res}/icons/tvrenamer.icns" todir="${dist}/${rel.name}.app/Contents/Resources" />
      <copy file="${etc}/LICENSE" todir="${dist}/${rel.name}.app" />

      <zip destfile="${dist}/${rel.name}-@{platform}.zip">
        <zipfileset dir="${dist}" filemode="755" />
      </zip>
      <copy file="${dist}/${rel.name}-@{platform}.zip" todir="${rel}" />
    </sequential>
  </macrodef>

  <macrodef name="dist.win">
    <attribute name="platform" />
    <sequential>
      <clean />

      <build.jar platform="@{platform}" />
      <!-- Create the .exe with launch4j, but first you must uncomment the ant task import above -->
      <launch4j>
        <config headerType="gui" outfile="${rel}/${rel.name}-@{platform}.exe" dontWrapJar="false" 
            jar="${dist}/tvrenamer.jar" icon="${res}\icons\oldschool-tv-icon.ico" chdir=".">
          <jre minVersion="1.5.0" />
        </config>
      </launch4j>
    </sequential>
  </macrodef>


  <target name="rel.win" depends="clean, init">
    <dist.win platform="win32" />
    <dist.win platform="win64" />
  </target>

  <target name="rel.linux" depends="clean">
    <dist.linux platform="gtk32" />
    <dist.linux platform="gtk64" />
  </target>

  <target name="rel.osx" depends="clean, init">
    <dist.osx platform="osx32" />
    <dist.osx platform="osx64" />
  </target>
  
  <target name="upload.osx">
    <upload platform="osx64" summary.platform="64-bit OSX" label.type="Type-Archive" label.os="OpSys-OSX" />
    <upload platform="osx32" summary.platform="32-bit OSX" label.type="Type-Archive" label.os="OpSys-OSX" />
  </target>

  <target name="rel.all" depends="clean, init, rel.win, rel.linux, rel.osx" />

  <target name="clean">
    <clean />
  </target>

  <macrodef name="clean">
    <sequential>
      <delete includeemptydirs="true" failonerror="false">
        <fileset dir="${dist}" includes="**/*" />
      </delete>

      <delete includeemptydirs="true" failonerror="false">
        <fileset dir="${build}" includes="**/*" />
      </delete>
    </sequential>
  </macrodef>

</project>
